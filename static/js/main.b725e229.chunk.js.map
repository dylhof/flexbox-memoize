{"version":3,"sources":["Instructions/Instructions.js","Header/Header.js","Info/Info.js","Aside/Aside.js","Question/Question.js","Feedback/Feedback.js","QuestionCard/QuestionCard.js","App/App.js","serviceWorker.js","index.js"],"names":["Instructions","props","react_default","a","createElement","showInstructions","className","onClick","toggleShowInstructions","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","state","Instructions_Instructions","Component","Info","quizStarted","showInfo","toggleShowInfo","currentQuestion","property","info","Aside","correctAnswers","answeredQuestions","href","target","rel","Info_Info","Question","randomAnswers","map","answer","src","alt","key","checkAnswer","Feedback","answerCorrect","correctAnswer","resetAnswerGiven","QuestionCard","event","setCorrectAnswers","removeIncorrect","setIncorrect","setAnswerGiven","answerGiven","setAnsweredQuestions","Question_Question","Feedback_Feedback","App","fetchQuestions","fetch","then","questions","json","parsedQuestions","flexboxData","saveToLocalStorage","catch","err","console","log","newQuestionOrder","randomize","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","defineProperty","localStorage","setItem","JSON","stringify","resetQuiz","updateQuestion","incorrect","endOfQuiz","removeItem","resetForReview","setEndOfQuiz","reviewIncorrect","incorrectQuestions","getItem","parsedIncorrectQuestions","parse","question","questionIndex","findIndex","newIncorrect","toConsumableArray","splice","value","setCurrentQuestion","answers","push","setInfo","startFromWhereILeftOff","_this$state","storedAnsweredQuestions","storedCorrectAnswers","storedIncorrect","storedQuestions","storedAnsweredQuestionsString","parseInt","_this2","_this$state2","src_Header_Header","Aside_Aside","src_QuestionCard_QuestionCard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b725e229.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Instructions(props) {\n  return (\n    <div >\n      {props.showInstructions &&\n      <div className='instructions-div'>\n        <p>Instructions</p>\n        <ol>\n          <li>Click StartQuiz</li>\n          <li>Choose the image that may be produced if the named flexbox property were in your CSS</li>\n          <li>If you get stuck, check the sidebar to get more information about the flexbox property</li>\n          <li>Enjoy creating simple layouts with flexbox!</li>\n        </ol>\n        <i className=\"far fa-times-circle\" onClick={props.toggleShowInstructions}></i>\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default Instructions;","import React, { Component } from 'react';\nimport Instructions from '../Instructions/Instructions.js';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showInstructions: false\n    }\n  }\n  \n  toggleShowInstructions = () => {\n    this.setState({ showInstructions: !this.state.showInstructions })\n  }\n\n  render() {\n    return (\n      <header className=\"App-header\">\n        <h1>FlexboxQuiz</h1>\n        <i className=\"far fa-question-circle\" onClick={this.toggleShowInstructions}></i>\n        <Instructions \n          showInstructions={this.state.showInstructions}\n          toggleShowInstructions={this.toggleShowInstructions}/>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\nfunction Info(props) {\n    return (\n      <div className='info-div'>\n        {!props.quizStarted && \n          <div className='aside-instruct-div'>\n            <p>Instructions</p>\n            <ol className='instructions-ol'>\n              <li>Click StartQuiz</li>\n              <li>Choose the image that may be produced if the named flexbox property were in your CSS</li>\n              <li>If you get stuck, check back here to get more information about the flexbox property</li>\n              <li>Enjoy creating simple layouts with flexbox!</li>\n            </ol>\n          </div>\n        }\n        {props.quizStarted && !props.showInfo && \n            <div className='show-more-info-div' onClick={props.toggleShowInfo} >\n              <p className='show-more-info-p'>\n              Click Here to show more info about: \n              </p>\n              <p className='show-more-info-p'>{props.currentQuestion.property}\n              </p> \n            </div>   \n        }\n        {props.quizStarted && props.showInfo && \n          <div onClick={props.toggleShowInfo}>\n            <p className='property-property-p'>\n             {props.currentQuestion.property}</p>\n             <p className='property-info-p'>\n              {props.currentQuestion.info}\n            </p>\n          </div>\n        }\n      </div>\n    )\n}\n\nexport default Info;","import React from 'react';\nimport Info from '../Info/Info.js';\n\nfunction Aside(props) {\n  return (\n    <aside className='aside'>\n      <div className='score-div'> \n        <h3>Your Score:</h3>\n        <p>{props.correctAnswers} Correct Answers</p>\n        <p>{props.answeredQuestions} Questions Answered</p>\n      </div>\n      <div className='aside-info-div'>\n        <button className='learn-more-btn' >\n          <a href='https://css-tricks.com/snippets/css/a-guide-to-flexbox/' target='_blank' rel=\"noopener noreferrer\">\n            Learn more about flexBox!\n          </a>\n        </button>\n        <Info \n          currentQuestion={props.currentQuestion}\n          showInfo={props.showInfo}\n          quizStarted={props.quizStarted}\n          toggleShowInfo={props.toggleShowInfo}/>\n      </div>\n    </aside>\n  )\n}\n\nexport default Aside;","import React from 'react';\n\nfunction Question(props){\n    return(\n      <div className='question-div'>\n        <div className='question-title-div'>\n          <h2>{props.currentQuestion.property}</h2>\n          <p>If you included this property in your CSS, \n            what image most closely resembles the result?</p>\n        </div>\n        <div className='question-img-div'>\n          {props.randomAnswers.map(answer => {\n            return (\n              <img\n                className='answer-img'\n                src={answer}\n                alt={answer}\n                key={answer}\n                onClick={props.checkAnswer}\n              />\n            );\n          })}\n        </div>\n      </div>\n    )\n}\n\nexport default Question;","import React from 'react';\n\nfunction Feedback(props) {\n  return(  \n    <div className='feedback-div'>\n      {props.answerCorrect && <h3>Correct!</h3>}\n      {!props.answerCorrect && <h3>Not Quite...</h3>}\n      <p className='feedback-property-p'> {props.currentQuestion.property} </p>\n      <p className='feedback-info-p'> {props.currentQuestion.info} </p>\n      <img \n      className='answer-img'\n      src={props.currentQuestion.correctAnswer}\n      alt={props.currentQuestion.property}\n      key={props.currentQuestion.property}\n      onClick={props.checkAnswer} />\n      <button className='next-btn' onClick={props.resetAnswerGiven}> Next Question </button>\n    </div>\n    )\n}\n\nexport default Feedback;","import React, { Component } from 'react';\nimport Question from '../Question/Question.js';\nimport Feedback from '../Feedback/Feedback.js';\n\nclass QuestionCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answerGiven: false,\n      answerCorrect: false\n    }\n  }\n\n  checkAnswer = (event) => {\n    if(this.props.currentQuestion.correctAnswer === event.target.src) {\n      this.setState({ answerCorrect: true });\n      this.props.setCorrectAnswers();\n      this.props.removeIncorrect(this.props.currentQuestion)\n    } else { \n      this.setState({ answerCorrect: false })\n      this.props.setIncorrect(this.props.currentQuestion);\n    };\n    this.setAnswerGiven();\n  }\n  \n  setAnswerGiven = () => {\n    this.setState({ answerGiven: true });\n  }\n  \n  resetAnswerGiven = () => {\n    this.setState({ answerGiven: false });\n    this.props.setAnsweredQuestions();\n  }\n\n  render() {\n    return(\n    <div className='question-card'>   \n      {!this.state.answerGiven && \n        <Question \n          currentQuestion={this.props.currentQuestion}\n          checkAnswer={this.checkAnswer}\n          randomAnswers={this.props.randomAnswers}/>\n      }\n      {this.state.answerGiven && \n        <Feedback \n          answerCorrect={this.state.answerCorrect}\n          resetAnswerGiven={this.resetAnswerGiven}\n          currentQuestion={this.props.currentQuestion}/>\n      }\n    </div>\n    )\n  }\n}\n\nexport default QuestionCard;","import React, { Component } from 'react';\nimport Header from '../Header/Header.js';\nimport Aside from '../Aside/Aside.js';\nimport QuestionCard from '../QuestionCard/QuestionCard.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    let storedAnsweredQuestions = 0;\n    let storedCorrectAnswers = 0;\n    let storedIncorrect = [];\n    let storedQuestions = [];\n    if (localStorage.getItem('answeredQuestions')) {\n      let storedAnsweredQuestionsString = JSON.parse(localStorage.getItem('answeredQuestions'));\n      storedAnsweredQuestions = parseInt(storedAnsweredQuestionsString);\n    }\n    if (localStorage.getItem('correctAnswers')) {\n      storedCorrectAnswers = JSON.parse(localStorage.getItem('correctAnswers'));\n    }\n    if (localStorage.getItem('incorrect')) {\n      storedIncorrect = JSON.parse(localStorage.getItem('incorrect'));\n    }\n    if (localStorage.getItem('questions')) {\n      storedQuestions = JSON.parse(localStorage.getItem('questions'))\n    }\n    this.state = {\n      answeredQuestions: storedAnsweredQuestions,\n      correctAnswers: storedCorrectAnswers,\n      currentQuestion: {},\n      endOfQuiz: false,\n      incorrect: storedIncorrect,\n      questions: storedQuestions,\n      quizStarted: false,\n      randomAnswers: [],\n      showInfo: false\n    }\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem('questions')) {\n      fetch('http://memoize-datasets.herokuapp.com/api/v1/flexboxData')\n        .then(questions => questions.json())\n        .then(parsedQuestions => this.setState({ questions: parsedQuestions.flexboxData }))\n        .catch(err => console.log('Oh No! Something is wrong!', err))\n    }\n  }\n\n  fetchQuestions = () => {\n    fetch('http://memoize-datasets.herokuapp.com/api/v1/flexboxData')\n        .then(questions => questions.json())\n        .then(parsedQuestions => this.setState({ questions: parsedQuestions.flexboxData }, () => {\n          this.saveToLocalStorage('questions', this.state.questions)\n        }))\n        .catch(err => console.log('Oh No! Something is wrong!', err))\n  }\n\n  newQuestionOrder = () => {\n    this.randomize('questions', this.state.questions)\n  }\n\n  randomize = (key, array) => {\n    let currentIndex = array.length;\n    let temporaryValue, randomIndex;\n    while(0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue\n    }\n    this.setState({ [key]: array }, () => {\n      if(key === 'questions') {\n        localStorage.setItem('questions', JSON.stringify(this.state.questions));\n        this.resetQuiz();\n      }\n    })\n  }\n\n  resetQuiz = () => {\n    this.fetchQuestions();\n    this.setState({ answeredQuestions: 0 }, this.updateQuestion);\n    this.setState({ correctAnswers: 0 })\n    this.setState({ incorrect: [] });\n    this.setState({ endOfQuiz: false });\n    this.setState({ quizStarted: true });\n    localStorage.removeItem('correct');\n    localStorage.removeItem('incorrect');\n    localStorage.removeItem('answeredQuestions');\n  }\n\n  resetForReview = () => {\n    localStorage.setItem('questions', JSON.stringify(this.state.questions));\n    this.setState({ answeredQuestions: 0 }, this.updateQuestion);\n    this.setState({ correctAnswers: 0 })\n    this.setEndOfQuiz(false);\n    this.setState({ quizStarted: true });\n    localStorage.removeItem('answeredQuestions');\n  }\n\n  reviewIncorrect = () => {\n    let incorrectQuestions = localStorage.getItem('incorrect');\n    let parsedIncorrectQuestions = JSON.parse(incorrectQuestions);\n    this.setState({ questions: parsedIncorrectQuestions }, this.resetForReview);\n  }\n\n  removeIncorrect = (question) => {\n    let questionIndex = this.state.questions.findIndex(incorrect => incorrect.property === question.property);\n    if(questionIndex !== -1) {\n      let newIncorrect = [...this.state.incorrect];\n      newIncorrect.splice(questionIndex, 1);\n      this.setState({ incorrect: newIncorrect }, () => {\n        this.saveToLocalStorage('incorrect', this.state.incorrect)\n      })\n    }\n  }\n\n  saveToLocalStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  setAnsweredQuestions = () => {\n    this.setState({ \n      answeredQuestions: (this.state.answeredQuestions + 1) \n    }, () => {\n    this.updateQuestion();\n    this.saveToLocalStorage('answeredQuestions', (JSON.stringify(this.state.answeredQuestions)))\n    });\n  }\n\n  setEndOfQuiz = (value) => {\n    this.setState({ endOfQuiz: value })\n  }\n\n  setCurrentQuestion = () => {\n    this.setState({ currentQuestion: this.state.questions[this.state.answeredQuestions]}, () => {\n      this.randomize('randomAnswers', this.state.currentQuestion.answers)\n    });\n  }\n\n  setCorrectAnswers = () => {\n    this.setState({ correctAnswers: (this.state.correctAnswers + 1)}, () => {\n      localStorage.setItem('correctAnswers', JSON.stringify(this.state.correctAnswers))\n    })\n  }\n\n  setIncorrect = (question) => {\n    let newIncorrect = [...this.state.incorrect];\n    newIncorrect.push(question);\n    this.setState({ incorrect: newIncorrect }, () => {\n      this.saveToLocalStorage('incorrect', this.state.incorrect)\n    });\n  }\n\n  setInfo = () => {\n    this.setState({ showInfo: false });\n  }\n\n  startFromWhereILeftOff = () => {\n    this.setCurrentQuestion();\n    this.setEndOfQuiz(false);\n    this.setState({ quizStarted: true });\n  }\n\n  toggleShowInfo = () => {\n    this.setState({ showInfo: !this.state.showInfo })\n  }\n\n  updateQuestion = () => {\n    let {answeredQuestions, questions} = this.state\n    if (answeredQuestions < questions.length) {\n      this.setCurrentQuestion();\n    } else {\n      this.setEndOfQuiz(true);\n    }\n    this.setInfo();\n  }\n\n  render() {\n    let {answeredQuestions, correctAnswers, currentQuestion, showInfo, quizStarted, endOfQuiz, incorrect, questions, randomAnswers} = this.state\n    return (\n      <div className=\"App\">\n        <Header/>  \n        <Aside \n          correctAnswers={correctAnswers}\n          currentQuestion={currentQuestion}\n          answeredQuestions={answeredQuestions}\n          showInfo={showInfo}\n          quizStarted={quizStarted}\n          toggleShowInfo={this.toggleShowInfo}\n          />\n        \n        {!quizStarted && !endOfQuiz &&\n        <div className='button-div'>\n          <button className='start-button' onClick={this.newQuestionOrder}>\n            Start New Quiz\n          </button>\n          \n          {(incorrect.length > 0) && \n            (answeredQuestions === questions.length) &&\n            <button className='wrong-button' onClick={this.reviewIncorrect}> \n              Retry questions I got wrong\n            </button>\n          }\n          \n          {(answeredQuestions > 0) && \n          (answeredQuestions < questions.length) && \n          <button className='left-off-button' onClick={this.startFromWhereILeftOff}>\n            Start Quiz Where I left off\n          </button>}\n        </div>\n      }\n\n      {quizStarted && !endOfQuiz &&\n        <QuestionCard \n          currentQuestion={currentQuestion}\n          setAnsweredQuestions={this.setAnsweredQuestions}\n          setCorrectAnswers={this.setCorrectAnswers}\n          randomAnswers={randomAnswers}\n          setIncorrect={this.setIncorrect}\n          removeIncorrect={this.removeIncorrect}/>\n      }\n\n      {endOfQuiz && \n        <div className='button-div'>\n          <div className='score-div'> \n            <h3>Your Score:</h3>\n            <p>{correctAnswers} Correct Answers</p>\n            <p>{answeredQuestions} Questions Answered</p>\n          </div>\n          <button className='start-button' onClick={this.newQuestionOrder}>Start New Quiz!</button>\n          {(incorrect.length > 0) && \n          <button className='wrong-button' onClick={this.reviewIncorrect}>Retry questions I got wrong</button>}\n        </div>\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}